ControllerRotaryTable(
		input signal bottleAtPos1, tableAlignedWithSensor, bottleAtPos5, capOnBottleAtPos1, enableRotaryTable;
		output signal rotaryTableTrigger, alignedSensor, capAtPos1, bottlePos5;
		input Integer signal mode;
		input signal rotaryTableTriggerM, alignedSensorM, capAtPos1M, bottlePos5M;
		)
->
{	
	signal selectM, selectA, startTimer, stopTimer;

	{//Manual
		while(true){
			await(selectM);
			abort(selectA){
				{while(true){present(rotaryTableTriggerM){emit rotaryTableTrigger;} pause;}}
				||
				{while(true){present(alignedSensorM){emit alignedSensor;} pause;}}
				||
				{while(true){present(capAtPos1M){emit capAtPos1;} pause;}}
				||
				{while(true){present(bottlePos5M){emit bottlePos5;} pause;}}
			}
		}
	}	
	||
	{//Auto
		while (true){
		await(selectA);
			abort(selectM){
				{
					await(bottleAtPos1);
					abort(capOnBottleAtPos1 || !bottleAtPos1){
						await(tableAlignedWithSensor);
						sustain rotaryTableTrigger;
					}
				}
				||
				{
					await(enableRotaryTable);
					abort(!enableRotaryTable){
						sustain rotaryTableTrigger;
					}
				}
			}	
		}
	}
	||
	{//Mode select
		await(mode);
		while(true){
			if((Integer)#mode == 1){
				emit selectM;
			}
			else{
				emit selectA;
			}
			pause;
		}
	}
}


